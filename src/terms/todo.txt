export const quickTerms: Record<string, QuickTermDefinition | undefined> = {
  axiom: {
    text: '公理',
    ruby: 'axiom',
  },
  domain: {
    text: '領域',
    ruby: 'domain',
  },
  set: {
    text: '集合',
    ruby: 'set',
  },
  'empty-set': {
    text: '空集合',
    ruby: 'empty set',
  },
  'set-theory': {
    text: '集合論',
    ruby: 'set theory',
  },
  'relationa-algebra': {
    text: '関係代数',
    ruby: 'relational algebra',
  },
  'mathematical-induction': {
    text: '数学的帰納法',
    ruby: 'mathematical-induction induction',
  },
  'structural-induction': {
    text: '構造的帰納法',
    ruby: 'structural induction',
  },
  category: {
    text: '圏',
    ruby: 'category',
  },
  'category-theory': {
    text: '圏論',
    ruby: 'category theory',
  },
  'logic-theory': {
    text: '論理学',
    ruby: 'logic thoery',
  },
  'curry-howard': {
    text: '論理学',
    ruby: 'logic thoery',
  },
  'power-set': {
    text: '冪集合',
    ruby: 'power set',
  },
  mapping: {
    text: '写像',
    ruby: 'mapping',
  },
  tuple: {
    text: '組',
    ruby: 'tuple',
  },
  'zero-divisor': {
    text: '零因子',
    ruby: 'zero divisor',
  },
  commutative: {
    text: '可換',
    ruby: 'commutative',
  },
  commutativity: {
    text: '可換則',
    ruby: 'commutativity',
  },
  associativity: {
    text: '結合則',
    ruby: 'associativity',
  },
  distributivity: {
    text: '分配則',
    ruby: 'distributivity',
  },
  'mat-eq': {
    text: '行列の相等',
    ruby: 'matrix equality',
    slug: 'matrix-equality',
  },
  'mat-add': {
    text: '行列の和',
    slug: 'matrix-addition',
  },
  'mat-subt': {
    text: '行列の差',
    slug: 'matrix-subtraction',
  },
  'mat-mult': {
    text: '行列の積',
    slug: 'matrix-multiplication',
  },
  'mat-rank': {
    text: '行列の階数',
    ruby: 'rank',
    slug: 'matrix-rank',
    others: [{ text: 'ランク' }],
  },
  'mat-trace': {
    text: '行列のトレース',
    ruby: 'trace',
    slug: 'matrix-trace',
  },
  trace: {
    text: 'トレース',
    ruby: 'trace',
    slug: 'trace',
  },
  eigenvalue: {
    text: '固有値',
    ruby: 'eigenvalue',
  },
  'eigenvalue-eq': {
    text: '固有方程式',
    ruby: 'eigenvalue equation',
    slug: 'eigenvalue-equation',
  },
  eigenvector: {
    text: '固有ベクトル',
    ruby: 'eigenvector',
  },
  eigenspace: {
    text: '固有空間',
    ruby: 'eigenspace',
  },
  'mat-det': {
    text: '行列式',
    ruby: 'determinant',
    slug: 'determinant',
  },
  'transform-matrix': {
    text: '表現行列',
    ruby: 'transformation matrix',
    slug: 'transformation-matrix',
  },
  zero: {
    text: '零',
    ruby: 'zero',
  },
  swap: {
    text: '互換',
    ruby: 'swap',
  },
  'peano-arithmetic': {
    text: 'ペアノ算術',
    ruby: 'Peano arithmetic',
    ref: {
      w: {
        ja: 'ペアノの公理#1+1=2に関する注意',
        en: 'Peano_axioms#Peano_arithmetic_as_first-order_theory',
      },
    },
  },
  'ordered-set': {
    text: '順序集合',
    ruby: 'ordered set',
  },
  'totally-ordered-set': {
    text: '全順序集合',
    ruby: 'totally ordered set',
  },
  'partially-ordered-set': {
    text: '半順序集合',
    ruby: 'partially ordered set',
  },
  'preordered-set': {
    text: '前順序集合',
    ruby: 'preordered set',
  },
  'transfinite-induction': {
    text: '超限帰納法',
    ruby: 'transfinite induction',
  },
  perm: {
    text: '置換',
    ruby: 'permutation',
    slug: 'permutation',
  },
  recursive: {
    text: '再帰的',
    ruby: 'recursive',
  },
  parity: {
    text: '偶奇',
    ruby: 'parity',
  },
  scalar: {
    text: 'スカラー',
    ruby: 'scalar',
  },
  scaling: {
    text: 'スカラー倍',
    ruby: 'scaling',
  },
  injection: {
    text: '単射',
    ruby: 'injection',
    others: [{ text: '入射' }],
  },
  surjection: {
    text: '全射',
    ruby: 'surjection',
  },
  bijection: {
    text: '全単射',
    ruby: 'bijection',
    others: [{ text: '可逆な写像', ruby: 'invertible' }],
  },
  inverse: {
    text: '逆元',
    ruby: 'inverse',
  },
  op: {
    text: '演算',
    ruby: 'operation',
    slug: 'operation',
  },
  operator: {
    text: '演算子',
    ruby: 'operator',
  },
  operand: {
    text: '被演算子',
    ruby: 'operand',
  },
  'mat-negation': {
    text: '行列の符号反転',
    slug: 'matrix-ngeation',
  },
  cyclic: {
    text: '巡回',
    ruby: 'cyclic',
    slug: 'cyclic',
  },
  'cyclic-group': {
    text: '巡回',
    ruby: 'cyclic',
    slug: 'cyclic',
  },
  'similar-mat': {
    text: '相似',
    ruby: 'similar',
    slug: 'similar-matrix',
  },
  transpose: {
    text: '転置',
    ruby: 'transpose',
    slug: 'transpose',
  },
  'transposed-mat': {
    text: '転置行列',
    ruby: 'transposed matrix',
    slug: 'transposed-matrix',
  },
  'inv-mat': {
    text: '逆行列',
    ruby: 'inverse',
    slug: 'matrix-inverse',
  },
  'invertible-mat': {
    text: '正則行列',
    ruby: 'invertible',
    slug: 'invertible-matrix',
  },
  invertible: {
    text: '可逆元',
    ruby: 'invertible',
    others: [{ text: '単元', ruby: 'unit' }],
  },
  inv: {
    text: '逆元',
    ruby: 'inverse',
    slug: 'inverse',
  },
  'l-inv': {
    text: '左逆元',
    ruby: 'left inverse',
    slug: 'left-inverse',
  },
  'r-inv': {
    text: '右逆元',
    ruby: 'right inverse',
    slug: 'right-inverse',
  },
  dof: {
    text: '自由度',
    ruby: 'degree of freedom',
    slug: 'degree-of-freedom',
  },
  reverse: {
    text: '反転',
    ruby: 'reverse',
  },
  'well-def': {
    text: 'well-defined',
    slug: 'well-defined',
  },
  dp: {
    text: '動的計画法',
    short: 'DP',
    ruby: 'dynamic programming',
    slug: 'dynamic-programming',
  },
  array: {
    text: '配列',
    ruby: 'array',
  },
  'lin-sp': {
    text: '線形空間',
    ruby: 'linear space',
    others: [{ text: 'ベクトル空間', ruby: 'vector space' }],
    slug: 'linear-space',
  },
  'real-sp': {
    text: '実数ベクトル空間',
    ruby: 'real vector space',
    slug: 'real-vector-space',
  },
  'comp-sp': {
    text: '虚数ベクトル空間',
    ruby: 'complex vector space',
    slug: 'complex-vector-space',
  },
  'func-sp': {
    text: '関数空間',
    ruby: 'function space',
    slug: 'function-space',
  },
  function: {
    text: '関数',
    ruby: 'function',
  },
  degree: {
    text: '次数',
    ruby: 'degree',
  },
  fin: {
    text: '有限',
    ruby: 'finite',
    slug: 'finite',
  },
  inf: {
    text: '無限',
    ruby: 'infinite',
    slug: 'infinite',
  },
  dimen: {
    text: '次元',
    ruby: 'dimension',
    slug: 'dimension',
  },
  differential: {
    text: '微分',
    ruby: 'differential',
    slug: 'differential',
  },
  integral: {
    text: '積分',
    ruby: 'integral',
    slug: 'integral',
  },
  'fin-dimen': {
    text: '有限次元',
    ruby: 'finite dimension',
    slug: 'finite-dimension',
  },
  'inf-dimen': {
    text: '無限次元',
    ruby: 'infinite dimension',
    slug: 'infinite-dimension',
  },
  vec: {
    text: 'ベクトル',
    ruby: 'vector',
    slug: 'vector',
  },
  'c-vec': {
    text: '列ベクトル',
    ruby: 'column vector',
    slug: 'column-vector',
  },
  'c-evec': {
    text: '列基本ベクトル',
    ruby: 'column unit vector',
    slug: 'column-unit-vector',
  },
  'r-vec': {
    text: '行ベクトル',
    ruby: 'row vector',
    slug: 'row-vector',
  },
  'r-evec': {
    text: '行基本ベクトル',
    ruby: 'row unit vector',
    slug: 'row-unit-vector',
  },
  'algebraic-structure': {
    text: '代数的構造',
    ruby: 'algebraic structure',
    slug: 'algebraic-structure',
  },
  'fund-theorem-algebra': {
    text: '代数学の基本定理',
    ruby: 'fundamental theorem of algebra',
    slug: 'fundamental-theorem-of-algebra',
  },
  identify: {
    text: '同一視',
    ruby: 'identify',
  },
  seq: {
    text: '列',
    ruby: 'sequence',
    slug: 'sequence',
  },
  'null-seq': {
    text: '空列',
    ruby: 'null sequence',
    slug: 'null-sequence',
  },
  'inf-seq': {
    text: '無限列',
    ruby: 'infinite sequence',
    slug: 'infinite-sequence',
  },
  'fin-seq': {
    text: '有限列',
    ruby: 'finite sequence',
    slug: 'finite-sequence',
  },
  index: {
    text: '添字',
    ruby: 'index',
    jaRuby: 'そえじ',
  },
  'orthonormal-system': {
    text: '正規直交系',
    ruby: 'orthonormal system',
    // https://encyclopediaofmath.org/wiki/Orthonormal_system#:~:text=An%20orthonormal%20system%20of%20vectors,)%3D1%20(normalization).
  },
  // algo
  'knapsack-problem': {
    text: 'ナップサック問題',
    ruby: 'knapsack problem',
    slug: 'knapsack-problem',
  },
  '01knapsack-problem': {
    text: '0-1 ナップサック問題',
    ruby: '0-1 knapsack problem',
    slug: '0-1-knapsack-problem',
  },
  'decision-problem': {
    text: '決定問題',
    ruby: 'decision problem',
    slug: 'decision-problem',
    // https://en.wikipedia.org/wiki/Decision_problem
  },
  'travel-prob': {
    text: '巡回セールスマン問題',
    ruby: 'traveling salesman problem',
    slug: 'traveling-salesman-problem',
  },
  greedy: {
    text: '貪欲法',
    ruby: 'greedy',
    slug: 'greedy',
  },
  'k-means': {
    text: 'k-means法',
    ruby: 'k-means',
    slug: 'k-means',
  },

  // ML
  'black-box-optimization': {
    text: 'ブラックボックス最適化',
    ruby: 'black-box optimization',
    slug: 'black-box-optimization',
  },
};

